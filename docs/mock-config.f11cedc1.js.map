{"version":3,"sources":["../lib/utils/sleep.js","../node_modules/strict-uri-encode/index.js","../node_modules/decode-uri-component/index.js","../node_modules/split-on-first/index.js","../node_modules/query-string/index.js","../lib/const/dom.js","../lib/mock.js","mock-config.js"],"names":["ms","Promise","resolve","setTimeout","module","exports","str","encodeURIComponent","replace","x","charCodeAt","toString","toUpperCase","token","singleMatcher","RegExp","multiMatcher","decodeComponents","components","split","decodeURIComponent","join","err","length","left","slice","right","Array","prototype","concat","call","decode","input","tokens","match","i","customDecodeURIComponent","replaceMap","exec","result","entries","Object","keys","key","encodedURI","TypeError","string","separator","separatorIndex","indexOf","strictUriEncode","require","decodeComponent","splitOnFirst","encoderForArrayFormat","options","arrayFormat","value","index","undefined","skipNull","encode","parserForArrayFormat","accumulator","isArray","newValue","strict","keysSorter","sort","a","b","Number","map","removeHash","hashStart","getHash","url","hash","extract","queryStart","parseValue","parseNumbers","isNaN","trim","parseBooleans","toLowerCase","parse","formatter","assign","ret","create","param","k","reduce","Boolean","stringify","object","objectCopy","filter","parseUrl","query","stringifyUrl","queryFromUrl","parsedQueryFromUrl","queryString","FINISHED_ATTR","__amMocktimes__","location","search","actions","JSON","mockActions","action","actionName","args","actionFunc","eval","e","errorMsg","console","warn","then","finishedElm","document","querySelector","remove","createElement","setAttribute","style","display","body","append","locations","A","B","Z","window","setLocation","log","message","catSaysLocation","src","alt","say","textContent","cat","onload","picture","animation","setPlan","planName","locationBox","innerHTML","html","displayStatistics","querySelectorAll","forEach","element","Math","floor","random","view"],"mappings":"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","file":"mock-config.f11cedc1.js","sourceRoot":"..\\mock","sourcesContent":["export default ms => new Promise(resolve => setTimeout(resolve, ms))\r\n","'use strict';\nmodule.exports = str => encodeURIComponent(str).replace(/[!'()*]/g, x => `%${x.charCodeAt(0).toString(16).toUpperCase()}`);\n","'use strict';\nvar token = '%[a-f0-9]{2}';\nvar singleMatcher = new RegExp(token, 'gi');\nvar multiMatcher = new RegExp('(' + token + ')+', 'gi');\n\nfunction decodeComponents(components, split) {\n\ttry {\n\t\t// Try to decode the entire string first\n\t\treturn decodeURIComponent(components.join(''));\n\t} catch (err) {\n\t\t// Do nothing\n\t}\n\n\tif (components.length === 1) {\n\t\treturn components;\n\t}\n\n\tsplit = split || 1;\n\n\t// Split the array in 2 parts\n\tvar left = components.slice(0, split);\n\tvar right = components.slice(split);\n\n\treturn Array.prototype.concat.call([], decodeComponents(left), decodeComponents(right));\n}\n\nfunction decode(input) {\n\ttry {\n\t\treturn decodeURIComponent(input);\n\t} catch (err) {\n\t\tvar tokens = input.match(singleMatcher);\n\n\t\tfor (var i = 1; i < tokens.length; i++) {\n\t\t\tinput = decodeComponents(tokens, i).join('');\n\n\t\t\ttokens = input.match(singleMatcher);\n\t\t}\n\n\t\treturn input;\n\t}\n}\n\nfunction customDecodeURIComponent(input) {\n\t// Keep track of all the replacements and prefill the map with the `BOM`\n\tvar replaceMap = {\n\t\t'%FE%FF': '\\uFFFD\\uFFFD',\n\t\t'%FF%FE': '\\uFFFD\\uFFFD'\n\t};\n\n\tvar match = multiMatcher.exec(input);\n\twhile (match) {\n\t\ttry {\n\t\t\t// Decode as big chunks as possible\n\t\t\treplaceMap[match[0]] = decodeURIComponent(match[0]);\n\t\t} catch (err) {\n\t\t\tvar result = decode(match[0]);\n\n\t\t\tif (result !== match[0]) {\n\t\t\t\treplaceMap[match[0]] = result;\n\t\t\t}\n\t\t}\n\n\t\tmatch = multiMatcher.exec(input);\n\t}\n\n\t// Add `%C2` at the end of the map to make sure it does not replace the combinator before everything else\n\treplaceMap['%C2'] = '\\uFFFD';\n\n\tvar entries = Object.keys(replaceMap);\n\n\tfor (var i = 0; i < entries.length; i++) {\n\t\t// Replace all decoded components\n\t\tvar key = entries[i];\n\t\tinput = input.replace(new RegExp(key, 'g'), replaceMap[key]);\n\t}\n\n\treturn input;\n}\n\nmodule.exports = function (encodedURI) {\n\tif (typeof encodedURI !== 'string') {\n\t\tthrow new TypeError('Expected `encodedURI` to be of type `string`, got `' + typeof encodedURI + '`');\n\t}\n\n\ttry {\n\t\tencodedURI = encodedURI.replace(/\\+/g, ' ');\n\n\t\t// Try the built in decoder first\n\t\treturn decodeURIComponent(encodedURI);\n\t} catch (err) {\n\t\t// Fallback to a more advanced decoder\n\t\treturn customDecodeURIComponent(encodedURI);\n\t}\n};\n","'use strict';\n\nmodule.exports = (string, separator) => {\n\tif (!(typeof string === 'string' && typeof separator === 'string')) {\n\t\tthrow new TypeError('Expected the arguments to be of type `string`');\n\t}\n\n\tif (separator === '') {\n\t\treturn [string];\n\t}\n\n\tconst separatorIndex = string.indexOf(separator);\n\n\tif (separatorIndex === -1) {\n\t\treturn [string];\n\t}\n\n\treturn [\n\t\tstring.slice(0, separatorIndex),\n\t\tstring.slice(separatorIndex + separator.length)\n\t];\n};\n","'use strict';\nconst strictUriEncode = require('strict-uri-encode');\nconst decodeComponent = require('decode-uri-component');\nconst splitOnFirst = require('split-on-first');\n\nfunction encoderForArrayFormat(options) {\n\tswitch (options.arrayFormat) {\n\t\tcase 'index':\n\t\t\treturn key => (result, value) => {\n\t\t\t\tconst index = result.length;\n\t\t\t\tif (value === undefined || (options.skipNull && value === null)) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [...result, [encode(key, options), '[', index, ']'].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [\n\t\t\t\t\t...result,\n\t\t\t\t\t[encode(key, options), '[', encode(index, options), ']=', encode(value, options)].join('')\n\t\t\t\t];\n\t\t\t};\n\n\t\tcase 'bracket':\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (value === undefined || (options.skipNull && value === null)) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [...result, [encode(key, options), '[]'].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [...result, [encode(key, options), '[]=', encode(value, options)].join('')];\n\t\t\t};\n\n\t\tcase 'comma':\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (value === null || value === undefined || value.length === 0) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (result.length === 0) {\n\t\t\t\t\treturn [[encode(key, options), '=', encode(value, options)].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [[result, encode(value, options)].join(',')];\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (value === undefined || (options.skipNull && value === null)) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [...result, encode(key, options)];\n\t\t\t\t}\n\n\t\t\t\treturn [...result, [encode(key, options), '=', encode(value, options)].join('')];\n\t\t\t};\n\t}\n}\n\nfunction parserForArrayFormat(options) {\n\tlet result;\n\n\tswitch (options.arrayFormat) {\n\t\tcase 'index':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /\\[(\\d*)\\]$/.exec(key);\n\n\t\t\t\tkey = key.replace(/\\[\\d*\\]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = {};\n\t\t\t\t}\n\n\t\t\t\taccumulator[key][result[1]] = value;\n\t\t\t};\n\n\t\tcase 'bracket':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /(\\[\\])$/.exec(key);\n\t\t\t\tkey = key.replace(/\\[\\]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = [value];\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\n\t\t\t};\n\n\t\tcase 'comma':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tconst isArray = typeof value === 'string' && value.split('').indexOf(',') > -1;\n\t\t\t\tconst newValue = isArray ? value.split(',') : value;\n\t\t\t\taccumulator[key] = newValue;\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\n\t\t\t};\n\t}\n}\n\nfunction encode(value, options) {\n\tif (options.encode) {\n\t\treturn options.strict ? strictUriEncode(value) : encodeURIComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction decode(value, options) {\n\tif (options.decode) {\n\t\treturn decodeComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction keysSorter(input) {\n\tif (Array.isArray(input)) {\n\t\treturn input.sort();\n\t}\n\n\tif (typeof input === 'object') {\n\t\treturn keysSorter(Object.keys(input))\n\t\t\t.sort((a, b) => Number(a) - Number(b))\n\t\t\t.map(key => input[key]);\n\t}\n\n\treturn input;\n}\n\nfunction removeHash(input) {\n\tconst hashStart = input.indexOf('#');\n\tif (hashStart !== -1) {\n\t\tinput = input.slice(0, hashStart);\n\t}\n\n\treturn input;\n}\n\nfunction getHash(url) {\n\tlet hash = '';\n\tconst hashStart = url.indexOf('#');\n\tif (hashStart !== -1) {\n\t\thash = url.slice(hashStart);\n\t}\n\n\treturn hash;\n}\n\nfunction extract(input) {\n\tinput = removeHash(input);\n\tconst queryStart = input.indexOf('?');\n\tif (queryStart === -1) {\n\t\treturn '';\n\t}\n\n\treturn input.slice(queryStart + 1);\n}\n\nfunction parseValue(value, options) {\n\tif (options.parseNumbers && !Number.isNaN(Number(value)) && (typeof value === 'string' && value.trim() !== '')) {\n\t\tvalue = Number(value);\n\t} else if (options.parseBooleans && value !== null && (value.toLowerCase() === 'true' || value.toLowerCase() === 'false')) {\n\t\tvalue = value.toLowerCase() === 'true';\n\t}\n\n\treturn value;\n}\n\nfunction parse(input, options) {\n\toptions = Object.assign({\n\t\tdecode: true,\n\t\tsort: true,\n\t\tarrayFormat: 'none',\n\t\tparseNumbers: false,\n\t\tparseBooleans: false\n\t}, options);\n\n\tconst formatter = parserForArrayFormat(options);\n\n\t// Create an object with no prototype\n\tconst ret = Object.create(null);\n\n\tif (typeof input !== 'string') {\n\t\treturn ret;\n\t}\n\n\tinput = input.trim().replace(/^[?#&]/, '');\n\n\tif (!input) {\n\t\treturn ret;\n\t}\n\n\tfor (const param of input.split('&')) {\n\t\tlet [key, value] = splitOnFirst(options.decode ? param.replace(/\\+/g, ' ') : param, '=');\n\n\t\t// Missing `=` should be `null`:\n\t\t// http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters\n\t\tvalue = value === undefined ? null : decode(value, options);\n\t\tformatter(decode(key, options), value, ret);\n\t}\n\n\tfor (const key of Object.keys(ret)) {\n\t\tconst value = ret[key];\n\t\tif (typeof value === 'object' && value !== null) {\n\t\t\tfor (const k of Object.keys(value)) {\n\t\t\t\tvalue[k] = parseValue(value[k], options);\n\t\t\t}\n\t\t} else {\n\t\t\tret[key] = parseValue(value, options);\n\t\t}\n\t}\n\n\tif (options.sort === false) {\n\t\treturn ret;\n\t}\n\n\treturn (options.sort === true ? Object.keys(ret).sort() : Object.keys(ret).sort(options.sort)).reduce((result, key) => {\n\t\tconst value = ret[key];\n\t\tif (Boolean(value) && typeof value === 'object' && !Array.isArray(value)) {\n\t\t\t// Sort object keys, not values\n\t\t\tresult[key] = keysSorter(value);\n\t\t} else {\n\t\t\tresult[key] = value;\n\t\t}\n\n\t\treturn result;\n\t}, Object.create(null));\n}\n\nexports.extract = extract;\nexports.parse = parse;\n\nexports.stringify = (object, options) => {\n\tif (!object) {\n\t\treturn '';\n\t}\n\n\toptions = Object.assign({\n\t\tencode: true,\n\t\tstrict: true,\n\t\tarrayFormat: 'none'\n\t}, options);\n\n\tconst formatter = encoderForArrayFormat(options);\n\n\tconst objectCopy = Object.assign({}, object);\n\tif (options.skipNull) {\n\t\tfor (const key of Object.keys(objectCopy)) {\n\t\t\tif (objectCopy[key] === undefined || objectCopy[key] === null) {\n\t\t\t\tdelete objectCopy[key];\n\t\t\t}\n\t\t}\n\t}\n\n\tconst keys = Object.keys(objectCopy);\n\n\tif (options.sort !== false) {\n\t\tkeys.sort(options.sort);\n\t}\n\n\treturn keys.map(key => {\n\t\tconst value = object[key];\n\n\t\tif (value === undefined) {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (value === null) {\n\t\t\treturn encode(key, options);\n\t\t}\n\n\t\tif (Array.isArray(value)) {\n\t\t\treturn value\n\t\t\t\t.reduce(formatter(key), [])\n\t\t\t\t.join('&');\n\t\t}\n\n\t\treturn encode(key, options) + '=' + encode(value, options);\n\t}).filter(x => x.length > 0).join('&');\n};\n\nexports.parseUrl = (input, options) => {\n\treturn {\n\t\turl: removeHash(input).split('?')[0] || '',\n\t\tquery: parse(extract(input), options)\n\t};\n};\n\nexports.stringifyUrl = (input, options) => {\n\tconst url = removeHash(input.url).split('?')[0] || '';\n\tconst queryFromUrl = exports.extract(input.url);\n\tconst parsedQueryFromUrl = exports.parse(queryFromUrl);\n\tconst hash = getHash(input.url);\n\tconst query = Object.assign(parsedQueryFromUrl, input.query);\n\tlet queryString = exports.stringify(query, options);\n\tif (queryString) {\n\t\tqueryString = `?${queryString}`;\n\t}\n\n\treturn `${url}${queryString}${hash}`;\n};\n","export const FINISHED_ATTR = 'data-am-coffee-time-finished'\r\n","import queryString from 'query-string'\r\nimport { FINISHED_ATTR } from './const/dom'\r\n\r\nconst { __amMocktimes__ } = queryString.parse(location.search)\r\nconst actions = JSON.parse(__amMocktimes__)\r\n\r\nexport default async function(mockActions) {\r\n  // 以下のobjectはevalで利用。voidしておく。\r\n  void mockActions\r\n\r\n  for (const action of actions) {\r\n    const [actionName, ...args] = action\r\n    let actionFunc\r\n    try {\r\n      actionFunc = eval(`mockActions.${actionName}`) // eslint-disable-line\r\n    } catch (e) {\r\n      const errorMsg = `cannot find action - \"${actionName}\" `\r\n      console.warn(errorMsg)\r\n      continue\r\n    }\r\n    if (!actionName) continue\r\n    if (!actionFunc) {\r\n      const errorMsg = `\"${actionName}\" is undefined`\r\n      console.warn(errorMsg)\r\n      continue\r\n    }\r\n\r\n    const result = actionFunc(...args)\r\n    if (result && result.then) {\r\n      await result\r\n    }\r\n  }\r\n\r\n  let finishedElm = document.querySelector(`[${FINISHED_ATTR}]`)\r\n  if (finishedElm) finishedElm.remove()\r\n\r\n  finishedElm = document.createElement('span')\r\n  finishedElm.setAttribute(FINISHED_ATTR, '')\r\n  finishedElm.style.display = 'none'\r\n  document.body.append(finishedElm)\r\n}\r\n","import sleep from '../lib/utils/sleep'\r\nimport mock from '../lib/mock'\r\nimport cat from './cat.svg'\r\n\r\nconst locations = {\r\n  A: ['Earth', 'Mars', 'Sun'],\r\n  B: ['Submaline City', 'Hanging Garden'],\r\n  Z: ['Capsule Corporation', 'Yahhoi', 'Cell Game'],\r\n}\r\n\r\nwindow.setLocation = async location => {\r\n  console.log('setLocation')\r\n  const message = `This is ${location}`\r\n  window.catSaysLocation.src = ''\r\n  window.catSaysLocation.alt = `Image loading...`\r\n  window.say.textContent = ''\r\n  await sleep(1000)\r\n  window.catSaysLocation.src = cat\r\n  window.say.textContent = message\r\n  if (location === 'Cell Game') {\r\n    window.catSaysLocation.onload = async () => {\r\n      window.picture.style.animation = ``\r\n      await sleep(100)\r\n      window.picture.style.animation = `spin 0.8s ease`\r\n    }\r\n  } else {\r\n    window.catSaysLocation.onload = () => {}\r\n  }\r\n}\r\n\r\nconst setPlan = async planName => {\r\n  console.log('setPlan')\r\n  await sleep(1400)\r\n  window.planName.textContent = planName\r\n  window.locationBox.innerHTML = locations[planName].reduce(\r\n    (html, location) =>\r\n      `${html}\r\n      <section>\r\n        <span class='location' onclick='setLocation(\"${location}\")'>${location}</span>\r\n        <span class='statistics'></span>\r\n      </section>`,\r\n    ''\r\n  )\r\n}\r\n\r\nwindow.displayStatistics = () => {\r\n  const elementList = document.querySelectorAll('.statistics')\r\n  elementList.forEach(element => {\r\n    element.textContent = `visitors: ${Math.floor(Math.random() * 100)}`\r\n  })\r\n}\r\n\r\nmock({\r\n  setPlan,\r\n  setLocation: window.setLocation,\r\n  view: {\r\n    displayStatistics: window.displayStatistics,\r\n  },\r\n})\r\n"]}